# Example api requests

## Media resource

### Get all media
GET http://localhost:3000/api/media

### Get a media item based on id
GET http://localhost:3000/api/media/3?format=plain

### 2nd version
GET http://localhost:3000/api/media/2
### test not found
GET http://localhost:3000/api/media/963

### Modify a media item based on id
PUT http://localhost:3000/api/media/3
Content-Type: application/json

{
  "title": "Uusi kissakuva",
  "description": "Uutta tietoa kissasta.",
  "user_id": 3,
  "filename": "kissakuva.png",
  "filesize": 123456,
  "media_type": "image/png"
}

### Delete a media item based on id
DELETE http://localhost:3000/api/media/8

### Create an item
POST http://localhost:3000/api/media
Content-Type: multipart/form-data; boundary=----Boundary

------Boundary
Content-Disposition: form-data; name="title"

New cat image
------Boundary
Content-Disposition: form-data; name="description"

Kiva kuva kissasta.
------Boundary
Content-Disposition: form-data; name="user_id"

1
------Boundary
Content-Disposition: form-data; name="file"; filename="kissa2.png"
Content-Type: image/png

< ./media/kissa2.png
------Boundary--










## User resource

### Get all users
GET http://localhost:3000/api/users
Content-Type: application/json

###

### Get a user based on ID
GET http://localhost:3000/api/users/2
Content-Type: application/json

###

### Test not found (invalid user ID)
GET http://localhost:3000/api/users/963
Content-Type: application/json

###

### Create a new user
POST http://localhost:3000/api/users
Content-Type: application/json

{
  "username": "newuser3",
  "email": "newuser3@example.com",
  "password": "password1232",
  "user_level_id": 1
}

###

### Modify an existing user by ID
PUT http://localhost:3000/api/users/23
Content-Type: application/json

{
  "username": "uusinimi",
  "email": "uusinimi@example.com",
  "password": "uusisalasana",
  "user_level_id": "2"
}

###

### Delete a user by ID
DELETE http://localhost:3000/api/users/10
Content-Type: application/json






## Ratings resource

### Get all ratings
GET http://localhost:3000/api/ratings

### Get a rating based on ID
GET http://localhost:3000/api/ratings/2

### Get all ratings for a specific media item
GET http://localhost:3000/api/ratings/media/3

### Get all ratings for a specific user
GET http://localhost:3000/api/ratings/user/3

### Test not found (invalid rating ID)
GET http://localhost:3000/api/ratings/963

### Create a new rating
POST http://localhost:3000/api/ratings
Content-Type: application/json

{
  "rating_value": 1,
  "media_id": 3,
  "user_id": 3
}

### Modify an existing rating by ID
PUT http://localhost:3000/api/ratings/3
Content-Type: application/json

{
  "rating_value": 5
}

### Delete a rating by ID
DELETE http://localhost:3000/api/ratings/6
